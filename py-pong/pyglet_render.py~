from pygame.sprite import Sprite
import pygame
import pypong, sys
import SocketServer, struct

screen = None #setting them as global for now, may be better solution
ball = None
ballrect = None
black = 0,0,0

class BallRender(Sprite):
    def __init__(self):
        Sprite.__init__(self)
        screen = pygame.disply.get_(surface)
        self.image = pygame.image.load('assets/paddle.png')
class broadcastServer(SocketServer.ThreadingMixIn, SocketServer.TCPServer):
    pass
class requestHandler(SocketServer.StreamRequestHandler):
    #currentUserLogin={} #{clientArr:accountName}
    def handle(self):
        global screen, ball, ballrect
        posvec=self.request.recv(1024)
        print(self.client_address)
        while posvec !='': 
            pos = struct.unpack('ff',posvec)
            print(pos)
            ballrect.center= pos
            screen.fill(black)
            screen.blit(ball, ballrect)
            pygame.display.flip()
            # self.wfile.write('server reply:{0}'.format(requestForUpdate))
            posvec=self.request.recv(1024)
        print('client disconnect')

if __name__ == '__main__':
    pygame.init()
    screen = pygame.display.set_mode((500,500))
    #ball = BallRender()
    ball = pygame.image.load('assets/ball.png')
    ballrect = ball.get_rect()
    server=broadcastServer(('localhost',20000),requestHandler)
    server.serve_forever()
    while 1:
        for event in pygame.event.get():
            if event.type == pygame.QUIT: sys.exit()

        
